plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'com.arnyminerz.locator' version '1.0.2'
    id 'com.bugsnag.android.gradle'
    id 'kotlin-parcelize'
}

apply from: './version.gradle'

android {
    namespace 'com.arnyminerz.filmagentaproto'
    compileSdk 33

    defaultConfig {
        applicationId "com.arnyminerz.filmagentaproto"
        minSdk 24
        targetSdk 33
        versionCode findProperty("android.versionCode") as Integer
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }

        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        buildConfigField "String", "HOST", "\"${properties.getProperty("host")}\""
        buildConfigField "String", "WS_RELAY", "\"${properties.getProperty("ws_relay")}\""

        buildConfigField "String", "DB_HOSTNAME", "\"${properties.getProperty("db.hostname")}\""
        buildConfigField "Integer", "DB_PORT", "${properties.getProperty("db.port")}"
        buildConfigField "String", "DB_DATABASE", "\"${properties.getProperty("db.database")}\""
        buildConfigField "String", "DB_USERNAME", "\"${properties.getProperty("db.username")}\""
        buildConfigField "String", "DB_PASSWORD", "\"${properties.getProperty("db.password")}\""

        buildConfigField "String", "WOO_CONSUMER_KEY", "\"${properties.getProperty("woo.consumer_key")}\""
        buildConfigField "String", "WOO_CONSUMER_SECRET", "\"${properties.getProperty("woo.consumer_secret")}\""
    }

    // Configures the APK and AAB signing config
    signingConfigs {
        release {
            def props = new Properties()
            file("${rootDir}/local.properties").withInputStream { props.load(it) }

            storeFile file("${rootDir}/keystore.jks")
            storePassword props.getProperty("SIGNING_KEYSTORE_PASSWORD")
            keyAlias props.getProperty("SIGNING_KEY_ALIAS")
            keyPassword props.getProperty("SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "release") {
        variant.assemble.doLast {
            // This increases version code on release
            def versionPropsFile = file("../gradle.properties")
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['android.versionCode'].toInteger() + 1
            versionProps['android.versionCode'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            logger.lifecycle("Increased version code to $code")
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Jetpack Compose - Base
    implementation "androidx.compose.ui:ui"
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Jetpack Compose - Material 3
    implementation 'androidx.compose.material3:material3:1.1.0-alpha08'

    // Jetpack Compose - Icons
    implementation 'androidx.compose.material:material-icons-extended'

    // Jetpack Compose - Integrations
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0'
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation "androidx.compose.ui:ui-text-google-fonts:1.3.3"

    // Jetpack Compose - Accompanist
    def accompanistVersion = '0.28.0'
    implementation "com.google.accompanist:accompanist-pager:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanistVersion"

    // For using MS SQL databases
    implementation 'net.sourceforge.jtds:jtds:1.3.1'

    // For loading images
    implementation("io.coil-kt:coil:2.2.2")
    implementation("io.coil-kt:coil-compose:2.2.2")

    // For parsing HTML
    implementation 'org.jsoup:jsoup:1.15.4'

    // For storing preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // For launching web browsers
    implementation "androidx.browser:browser:1.5.0"

    // Room Database
    def room_version = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    implementation "androidx.work:work-runtime-ktx:2.8.0"

    // For monitoring performance and bug reports
    implementation "com.bugsnag:bugsnag-android:5.28.4"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}